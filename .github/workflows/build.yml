name: Build Signed AAB & APK (Fixed + Verified)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 1. Checkout repository
        uses: actions/checkout@v4

      - name: 2. Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: 3. Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: 4. Check Secrets
        run: |
          if [ -z "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" ]; then
            echo "::error:: SECRET 'ANDROID_KEYSTORE_BASE64' NOT SET."
            exit 1
          fi
          if [ -z "${{ secrets.KEY_ALIAS }}" ]; then
            echo "::error:: SECRET 'KEY_ALIAS' NOT SET."
            exit 1
          fi
          if [ -z "${{ secrets.KEY_PASSWORD }}" ]; then
            echo "::error:: SECRET 'KEY_PASSWORD' NOT SET."
            exit 1
          fi
          if [ -z "${{ secrets.KEYSTORE_PASSWORD }}" ]; then
            echo "::error:: SECRET 'KEYSTORE_PASSWORD' NOT SET."
            exit 1
          fi
          echo "âœ… All secrets are set."

      - name: 5. Change Package Name
        run: |
          echo "Changing package name..."
          sed -i 's/com.example.chetegram/com.opkukna.exambeing/g' android/app/build.gradle.kts || true

      - name: 6. Flutter Clean & Get Packages
        run: |
          flutter clean
          flutter pub get

      - name: 7. Decode Keystore
        run: |
          echo "Decoding Keystore..."
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 --decode > android/app/upload-keystore.jks

      - name: 8. Create key.properties
        run: |
          echo "Creating key.properties..."
          echo "storeFile=upload-keystore.jks" > android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" >> android/key.properties

      - name: 9. Verify key.properties
        run: cat android/key.properties

      - name: 10. Build Signed AAB
        run: |
          echo "ðŸ”¨ Building Signed AAB..."
          flutter build appbundle --release
          echo "âœ… Checking AAB output..."
          find build/ -type f -name "*.aab" || true

      - name: 11. Build Signed APK
        run: |
          echo "ðŸ”¨ Building Signed APK..."
          flutter build apk --release
          echo "âœ… Checking APK output..."
          find build/ -type f -name "*.apk" || true

      - name: 12. Upload AAB
        uses: actions/upload-artifact@v4
        with:
          name: release-appbundle
          path: |
            build/app/outputs/bundle/release/*.aab
            build/app/outputs/flutter-apk/*.aab

      - name: 13. Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: |
            build/app/outputs/flutter-apk/*.apk
